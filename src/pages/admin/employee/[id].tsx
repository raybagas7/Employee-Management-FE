import AddNewSalaryForm from "@/components/Form/AddNewSalaryForm";
import EditEmployeeDataForm from "@/components/Form/EditEmployeeDataForm";
import EditSalaryForm from "@/components/Form/EditSalaryForm";
import HeaderLined from "@/components/Header/HeaderLined";
import CoreLayout from "@/components/Layouts/CoreLayout";
import Modal from "@/components/Modal/Modal";
import { Button } from "@/components/ui/button";
import { useModal } from "@/store/modal/useModal";
import { GetServerSideProps } from "next";
import Head from "next/head";
import React, { ReactElement } from "react";

const Employee = ({ userInformation }: IemployeeInformationPage) => {
  const { showModal } = useModal();

  const showSalaryForm = () => {
    showModal(<AddNewSalaryForm id={userInformation.id} />);
  };
  return (
    <>
      <Head>
        <title>{`${userInformation.fullname} | Kazee Employee Management`}</title>
        <meta name="kazee" content="Generated by create next app" />`
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className="min-w-screen min-h-screen gap-3 px-3 pb-10 pt-16 md:px-28 md:pt-24 2xl:px-72 ">
        <Modal backDropClose />
        <div>
          <HeaderLined className="text-primary">
            Edit Employee Information
          </HeaderLined>
          <EditEmployeeDataForm {...userInformation} />
          <HeaderLined className="mt-10 text-primary">
            Edit Employee Salary and Role
          </HeaderLined>
          {userInformation.role ? (
            <EditSalaryForm
              id={userInformation.id}
              salary={userInformation.salary as string}
              role={userInformation.role as string}
            />
          ) : (
            <div>
              <Button onClick={showSalaryForm}>Add Salary and Role</Button>
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default Employee;

Employee.getLayout = function getLayout(page: ReactElement) {
  return <CoreLayout>{page}</CoreLayout>;
};

export const getServerSideProps: GetServerSideProps = async ({
  params,
}: any) => {
  const response = await fetch(
    `${process.env.BASE_API_URL}/users/${params.id}`,
  );

  const userInformation = await response.json();

  if (!params || !params.id || response.status !== 200) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      userInformation: userInformation.data.user,
    },
  };
};
